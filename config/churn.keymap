/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define SYM     1
#define NAV     2
#define SYS     3

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// --------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  ||  Y  |  U  |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  ||  H  |  J  |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  ||  N  |  M  |  ,  |  .  |  /  |
// ------| CTL | OPT | SFT | CMD || TAB | SPC | RET | DEL |------
//       --------------------------------------------------
                        bindings = <
   &kp Q &kp W    &kp E    &kp R    &kp T    &kp Y       &kp U         &kp I         &kp O    &kp P
   &kp A &kp S    &kp D    &kp F    &kp G    &kp H       &kp J         &kp K         &kp L    &kp SEMI
   &kp Z &kp X    &kp C    &kp V    &kp B    &kp N       &kp M         &kp COMMA     &kp DOT  &kp FSLH
         &kp LCTL &kp LALT &kp LSFT &kp LCMD &lt SYS TAB &lt SYM SPACE &lt NAV ENTER &kp BSPC
                        >;
                };

                sym_layer {
// --------------------------------------------------------------
// |  `  |  ?  |  !  |  {  |  }  ||  *  |  7  |  8  |  9  |  \  |
// | ESC |  &  | '|' |  (  |  )  ||  =  |  4  |  5  |  6  |  -  |
// |  #  |  $  |  @  |  [  |  ]  ||  /  |  1  |  2  |  3  |  .  |
// ------| CTL | OPT | SFT | CMD || TAB |     |  0  | DEL |------
//       --------------------------------------------------
                        bindings = <
   &kp GRAVE &kp LBRC &kp EXCL &kp UNDER &kp PLUS  &kp STAR &kp N7 &kp N8 &kp N9 &kp BSLH
   &kp ESC   &kp AMPS &kp PIPE &kp LPAR  &kp RPAR  &kp RBKT &kp N4 &kp N5 &kp N6 &kp SQT
   &kp HASH  &kp DLLR &kp AT   &kp MINUS &kp EQUAL &kp LBKT &kp N1 &kp N2 &kp N3 &kp E
             &trans   &trans   &trans    &trans    &trans   &trans &kp N0 &trans
                        >;
                };

                nav_layer {
// --------------------------------------------------------------
// |     |     |     |     |     || PGU | HM  | UP  | END |     |
// | ESC |     | TBP | TBN |     || PGD | LFT | DN  | RGT |     |
// |     |     |     |     |     ||     |     |     |     |     |
// ------| CTL | OPT | SFT | CMD ||     | SPC | RET | FDL |------
//       --------------------------------------------------
                        bindings = <
   &none   &none  &none             &none             &none  &kp PG_UP &kp HOME &kp UP   &kp END   &none
   &kp ESC &none  &kp LG(LS(MINUS)) &kp LG(LS(EQUAL)) &none  &kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &none
   &none   &none  &none             &none             &none  &none     &none    &none    &none     &none
           &trans &trans            &trans            &trans &trans    &trans   &trans   &kp DEL
                        >;
                };

								sys_layer {
// --------------------------------------------------------------
// | BTP | BTN | BT0 | BT1 | BTC ||     |     |     |     | VUP |
// | ESC |     |     |     | PSC || EJK | PRV | PLY | NXT | VDN |
// |     |     |     |     |     ||     |     |     |     | VNO |
// ------| CTL | OPT | SFT | CMD ||     | SPC | RET | DEL |------
//       --------------------------------------------------
                        bindings = <
   &bt BT_PRV &bt BT_NXT &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_CLR     &none       &none      &none    &none      &kp C_VOL_UP
   &kp ESC    &none      &none        &none        &kp LG(LS(N4)) &kp C_EJECT &kp C_PREV &kp C_PP &kp C_NEXT &kp C_VOL_DN
   &none      &none      &none        &none        &none          &none       &none      &none    &none      &kp C_MUTE
              &trans     &trans       &trans       &trans         &trans      &trans     &trans   &trans
                        >;
								};
        };
};
